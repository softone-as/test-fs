include:
  - /deploy/.preview.gitlab-ci.yml

variables:
  FF_USE_FASTZIP: "true"
  CACHE_COMPRESSION_LEVEL: "fast"
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: 1

build:storybook:
  stage: build
  image: node:16.15.1
  tags: [dot-highcpu]
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - node_modules
  before_script:
    - yarn install --frozen-lockfile --prefer-offline
  script:
    - yarn chromatic --project-token=$CHROMATIC_PROJECT_TOKEN --zip
  allow_failure: true

build_develop:base_docker_image:
  stage: build
  image: docker:20.10
  tags: [dot-highcpu]
  rules:
    - if: $CI_COMMIT_BRANCH == "development"
      changes:
        - Dockerfile.base
        - package.json
        - yarn.lock
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build
        --progress plain
        --tag ${CI_REGISTRY_IMAGE}:development_base
        --file Dockerfile.base
        .
    - docker push ${CI_REGISTRY_IMAGE}:development_base

build_develop:docker_image:
  stage: build
  image: docker:20.10
  tags: [dot-highcpu]
  only: [development]
  when: manual
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build
        --progress plain
        --build-arg NESTJS_INERTIA_BASE=${CI_REGISTRY_IMAGE}:development_base
        --tag ${CI_REGISTRY_IMAGE}:development_${CI_COMMIT_SHORT_SHA}
        --file Dockerfile.backoffice
        .
    - docker push ${CI_REGISTRY_IMAGE}:development_${CI_COMMIT_SHORT_SHA}
  allow_failure: false

deploy_develop:
  stage: deploy
  image: asia.gcr.io/dot-gitlab-runner/ansible:2.9.21
  tags: [dot]
  only: [development]
  needs:
    - build_develop:docker_image
  environment:
    name: develop
    url: https://boilerplate-nestjs-inertia-dev.dot.co.id
  before_script:
    - chmod 600 $ANSIBLE_KEY_FILE
    - ansible-galaxy collection install community.docker:==3.4.0
  script:
    - ansible-playbook --private-key $ANSIBLE_KEY_FILE -i deploy/hosts -v deploy/develop.yaml
